'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
'
Namespace wsCentralbascula
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="BasicHttpBinding_ICentral", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class Central
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private Crear_Tiquete_Traslado_PuertoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Estado_VehiculoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private lotes_ProduccionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.ChronoSoftNet.My.MySettings.Default.ChronoSoftNet_wsCentralbascula_Central
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event Crear_Tiquete_Traslado_PuertoCompleted As Crear_Tiquete_Traslado_PuertoCompletedEventHandler
        
        '''<remarks/>
        Public Event Estado_VehiculoCompleted As Estado_VehiculoCompletedEventHandler
        
        '''<remarks/>
        Public Event lotes_ProduccionCompleted As lotes_ProduccionCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICentral/Crear_Tiquete_Traslado_Puerto", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Crear_Tiquete_Traslado_Puerto(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal placa As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal lote As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal lote_destino As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal destino As String, ByVal fecha As Date, <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal fechaSpecified As Boolean, ByVal fechaHora As Date, <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal fechaHoraSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal codigo_articulo As String, ByVal peso_neto As Double, <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal peso_netoSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal observaciones As String, ByRef Crear_Tiquete_Traslado_PuertoResult As Integer, <System.Xml.Serialization.XmlIgnoreAttribute()> ByRef Crear_Tiquete_Traslado_PuertoResultSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef mensaje As String)
            Dim results() As Object = Me.Invoke("Crear_Tiquete_Traslado_Puerto", New Object() {placa, lote, lote_destino, destino, fecha, fechaSpecified, fechaHora, fechaHoraSpecified, codigo_articulo, peso_neto, peso_netoSpecified, observaciones})
            Crear_Tiquete_Traslado_PuertoResult = CType(results(0),Integer)
            Crear_Tiquete_Traslado_PuertoResultSpecified = CType(results(1),Boolean)
            mensaje = CType(results(2),String)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Crear_Tiquete_Traslado_PuertoAsync(ByVal placa As String, ByVal lote As String, ByVal lote_destino As String, ByVal destino As String, ByVal fecha As Date, ByVal fechaSpecified As Boolean, ByVal fechaHora As Date, ByVal fechaHoraSpecified As Boolean, ByVal codigo_articulo As String, ByVal peso_neto As Double, ByVal peso_netoSpecified As Boolean, ByVal observaciones As String)
            Me.Crear_Tiquete_Traslado_PuertoAsync(placa, lote, lote_destino, destino, fecha, fechaSpecified, fechaHora, fechaHoraSpecified, codigo_articulo, peso_neto, peso_netoSpecified, observaciones, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Crear_Tiquete_Traslado_PuertoAsync(ByVal placa As String, ByVal lote As String, ByVal lote_destino As String, ByVal destino As String, ByVal fecha As Date, ByVal fechaSpecified As Boolean, ByVal fechaHora As Date, ByVal fechaHoraSpecified As Boolean, ByVal codigo_articulo As String, ByVal peso_neto As Double, ByVal peso_netoSpecified As Boolean, ByVal observaciones As String, ByVal userState As Object)
            If (Me.Crear_Tiquete_Traslado_PuertoOperationCompleted Is Nothing) Then
                Me.Crear_Tiquete_Traslado_PuertoOperationCompleted = AddressOf Me.OnCrear_Tiquete_Traslado_PuertoOperationCompleted
            End If
            Me.InvokeAsync("Crear_Tiquete_Traslado_Puerto", New Object() {placa, lote, lote_destino, destino, fecha, fechaSpecified, fechaHora, fechaHoraSpecified, codigo_articulo, peso_neto, peso_netoSpecified, observaciones}, Me.Crear_Tiquete_Traslado_PuertoOperationCompleted, userState)
        End Sub
        
        Private Sub OnCrear_Tiquete_Traslado_PuertoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Crear_Tiquete_Traslado_PuertoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Crear_Tiquete_Traslado_PuertoCompleted(Me, New Crear_Tiquete_Traslado_PuertoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICentral/Estado_Vehiculo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Estado_Vehiculo(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal CIA As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal CO As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal placa As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef estado As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef cedula As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef conductor As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef concepto As String, ByRef fechaSalida As Date, <System.Xml.Serialization.XmlIgnoreAttribute()> ByRef fechaSalidaSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByRef mensaje_Error As String, ByRef Estado_VehiculoResult As Boolean, <System.Xml.Serialization.XmlIgnoreAttribute()> ByRef Estado_VehiculoResultSpecified As Boolean)
            Dim results() As Object = Me.Invoke("Estado_Vehiculo", New Object() {CIA, CO, placa, estado, cedula, conductor, concepto, fechaSalida, fechaSalidaSpecified, mensaje_Error})
            estado = CType(results(0),String)
            cedula = CType(results(1),String)
            conductor = CType(results(2),String)
            concepto = CType(results(3),String)
            fechaSalida = CType(results(4),Date)
            fechaSalidaSpecified = CType(results(5),Boolean)
            mensaje_Error = CType(results(6),String)
            Estado_VehiculoResult = CType(results(7),Boolean)
            Estado_VehiculoResultSpecified = CType(results(8),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Estado_VehiculoAsync(ByVal CIA As String, ByVal CO As String, ByVal placa As String, ByVal estado As String, ByVal cedula As String, ByVal conductor As String, ByVal concepto As String, ByVal fechaSalida As Date, ByVal fechaSalidaSpecified As Boolean, ByVal mensaje_Error As String)
            Me.Estado_VehiculoAsync(CIA, CO, placa, estado, cedula, conductor, concepto, fechaSalida, fechaSalidaSpecified, mensaje_Error, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Estado_VehiculoAsync(ByVal CIA As String, ByVal CO As String, ByVal placa As String, ByVal estado As String, ByVal cedula As String, ByVal conductor As String, ByVal concepto As String, ByVal fechaSalida As Date, ByVal fechaSalidaSpecified As Boolean, ByVal mensaje_Error As String, ByVal userState As Object)
            If (Me.Estado_VehiculoOperationCompleted Is Nothing) Then
                Me.Estado_VehiculoOperationCompleted = AddressOf Me.OnEstado_VehiculoOperationCompleted
            End If
            Me.InvokeAsync("Estado_Vehiculo", New Object() {CIA, CO, placa, estado, cedula, conductor, concepto, fechaSalida, fechaSalidaSpecified, mensaje_Error}, Me.Estado_VehiculoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEstado_VehiculoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Estado_VehiculoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Estado_VehiculoCompleted(Me, New Estado_VehiculoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICentral/lotes_Produccion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function lotes_Produccion(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal CIA As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal CO As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal conceptos_pesaje As String, ByVal rowID As Integer, <System.Xml.Serialization.XmlIgnoreAttribute()> ByVal rowIDSpecified As Boolean) As <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> System.Data.DataTable
            Dim results() As Object = Me.Invoke("lotes_Produccion", New Object() {CIA, CO, conceptos_pesaje, rowID, rowIDSpecified})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub lotes_ProduccionAsync(ByVal CIA As String, ByVal CO As String, ByVal conceptos_pesaje As String, ByVal rowID As Integer, ByVal rowIDSpecified As Boolean)
            Me.lotes_ProduccionAsync(CIA, CO, conceptos_pesaje, rowID, rowIDSpecified, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub lotes_ProduccionAsync(ByVal CIA As String, ByVal CO As String, ByVal conceptos_pesaje As String, ByVal rowID As Integer, ByVal rowIDSpecified As Boolean, ByVal userState As Object)
            If (Me.lotes_ProduccionOperationCompleted Is Nothing) Then
                Me.lotes_ProduccionOperationCompleted = AddressOf Me.Onlotes_ProduccionOperationCompleted
            End If
            Me.InvokeAsync("lotes_Produccion", New Object() {CIA, CO, conceptos_pesaje, rowID, rowIDSpecified}, Me.lotes_ProduccionOperationCompleted, userState)
        End Sub
        
        Private Sub Onlotes_ProduccionOperationCompleted(ByVal arg As Object)
            If (Not (Me.lotes_ProduccionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent lotes_ProduccionCompleted(Me, New lotes_ProduccionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub Crear_Tiquete_Traslado_PuertoCompletedEventHandler(ByVal sender As Object, ByVal e As Crear_Tiquete_Traslado_PuertoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Crear_Tiquete_Traslado_PuertoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Crear_Tiquete_Traslado_PuertoResult() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property Crear_Tiquete_Traslado_PuertoResultSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property mensaje() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub Estado_VehiculoCompletedEventHandler(ByVal sender As Object, ByVal e As Estado_VehiculoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Estado_VehiculoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property estado() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property cedula() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property conductor() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property concepto() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property fechaSalida() As Date
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(4),Date)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property fechaSalidaSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(5),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property mensaje_Error() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(6),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property Estado_VehiculoResult() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(7),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property Estado_VehiculoResultSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(8),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub lotes_ProduccionCompletedEventHandler(ByVal sender As Object, ByVal e As lotes_ProduccionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class lotes_ProduccionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
End Namespace
